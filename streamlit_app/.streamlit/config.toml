[global]

# By default, Streamlit checks if the Python watchdog module is available and, if not,
# prints a warning asking for you to install it. The watchdog module is not required,
# it's just an optimization. You can set this to False to prevent this warning.
disableWatchdogWarning = false

# By default, Streamlit displays a warning when a user sets both a widget default value
# in the function defining the widget and a widget value via the widget's key in
# st.session_state.
showWarningOnDirectExecution = true

[logger]

# Level of logging: 'error', 'warning', 'info', or 'debug'.
level = "info"

[client]

# Whether to enable st.cache.
caching = true

# If false, makes your Streamlit script not draw to a Streamlit app.
displayEnabled = true

# Controls whether uncaught app exceptions are displayed in the browser. By default, this is set to True and Streamlit displays app exceptions and associated tracebacks in the browser.
showErrorDetails = true

[runner]

# Allows you to type a variable or string by itself in a single line of Python code to write it to the app.
magicEnabled = true

# Install a Python tracer to allow you to stop or pause your script at any point and introspect it. As a side-effect, this slows down your script's execution.
installTracer = false

# Sets the MPLBACKEND environment variable to Agg inside Streamlit to prevent Python crashing.
fixMatplotlib = true

# Run the Python Garbage Collector after each script execution. This can help avoid excess memory use in Streamlit apps, but could introduce delay in rerunning the app script for high-memory-use applications.
postScriptGC = true

# Handle script rerun requests immediately, rather than waiting for script execution to reach a yield point. Enabling this will make Streamlit much more responsive to user interaction, but it can break compatibility with apps that were written before this feature was introduced.
fastReruns = true

[server]

# List of folders that should not be watched for changes. This impacts both "Run on Save" and @st.cache.
# Relative paths will be taken as relative to the current working directory.
# Example: ['/home/user1/env', 'relative/path/to/folder']
folderWatchBlacklist = []

# Change the type of file watcher used by Streamlit, or turn it off completely.
# Allowed values: * "auto" : Streamlit will attempt to use the watchdog module, and falls back to polling if watchdog is not available.
# * "watchdog" : Force Streamlit to use the watchdog module.
# * "poll" : Force Streamlit to always use polling.
# * "none" : Streamlit will not watch files.
fileWatcherType = "auto"

# Symmetric key used to produce signed cookies. If deploying on multiple replicas, this should be set to the same value across all replicas to ensure they all share the same secret.
# Default: randomly generated secret key.
cookieSecret = "home-credit-risk-app-secret-key"

# If false, will attempt to open a browser window on start.
headless = false

# Automatically rerun script when the file is modified on disk.
runOnSave = true

# The address where the server will listen for client and browser connections. Use this if you want to bind the server to a specific address. If set, the server will only be accessible from this address, and not from any other address.
# Default: 'localhost'
address = "localhost"

# The port where the server will listen for browser connections.
port = 8501

# The base path for the URL where Streamlit should be served from.
baseUrlPath = ""

# Enables support for Cross-Origin Resource Sharing (CORS) protection, for added security.
# Due to conflicts between CORS and XSRF, if `server.enableXsrfProtection` is on and `server.enableCORS` is off at the same time, we will prioritize `server.enableXsrfProtection`.
enableCORS = true

# Enables support for Cross-Site Request Forgery (XSRF) protection, for added security.
# Due to conflicts between CORS and XSRF, if `server.enableXsrfProtection` is on and `server.enableCORS` is off at the same time, we will prioritize `server.enableXsrfProtection`.
enableXsrfProtection = true

# Max size, in megabytes, for files uploaded with the file_uploader.
# Default: 200
maxUploadSize = 200

# Max size, in megabytes, of messages that can be sent via the WebSocket connection.
# Default: 200
maxMessageSize = 200

# Enables support for websocket compression.
enableWebsocketCompression = false

[browser]

# Internet address where users should point their browsers in order to connect to the app. Can be IP address or DNS name and path.
# This is used to: - Set the correct URL for CORS and XSRF protection purposes. - Show the URL on the terminal - Open the browser
# Default: 'localhost'
serverAddress = "localhost"

# Whether to send usage statistics to Streamlit.
gatherUsageStats = false

# Configure the ability to share apps to the cloud.
serverPort = 8501

[mapbox]

# Configure Mapbox token. To get a token for yourself, create an account at https://mapbox.com.
# It's free (for moderate usage levels)!
token = ""

[deprecation]

# Set to false to disable the deprecation warning for the file uploader encoding.
showfileUploaderEncoding = true

# Set to false to disable the deprecation warning for using the global pyplot instance.
showPyplotGlobalUse = true

[theme]

# Primary accent color for interactive elements.
primaryColor = "#1f77b4"

# Background color for the main content area.
backgroundColor = "#ffffff"

# Background color used for the sidebar and most interactive widgets.
secondaryBackgroundColor = "#f0f2f6"

# Color used for almost all text.
textColor = "#262730"

# Font family for all text in the app, except code blocks. One of "sans serif", "serif", or "monospace".
# Default: "sans serif"
font = "sans serif"